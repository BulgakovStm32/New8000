<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OutFiles\new8000sbV1_sw001.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OutFiles\new8000sbV1_sw001.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Tue Oct 20 10:44:47 2020
<BR><P>
<H3>Maximum Stack Usage =         48 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Task_Apply &rArr; Siren_ControlFromMB &rArr; Siren_OutputFSM &rArr; __ARM_common_switch8
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[39]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[15]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[12]">DMA1_Channel1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[13]">DMA1_Channel2_3_IRQHandler</a> from dma_st.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[14]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[f]">EXTI0_1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[10]">EXTI2_3_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[11]">EXTI4_15_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[d]">FLASH_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from sys_st.o(i.HardFault_Handler) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1c]">I2C1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[25]">IdleTask</a> from scheduler.o(i.IdleTask) referenced from scheduler.o(i.Scheduler)
 <LI><a href="#[25]">IdleTask</a> from scheduler.o(i.IdleTask) referenced from scheduler.o(i.Scheduler_Init)
 <LI><a href="#[25]">IdleTask</a> from scheduler.o(i.IdleTask) referenced from scheduler.o(i.Scheduler_SetTask)
 <LI><a href="#[25]">IdleTask</a> from scheduler.o(i.IdleTask) referenced from scheduler.o(i.Scheduler_TimerService)
 <LI><a href="#[6]">NMI_Handler</a> from sys_st.o(i.NMI_Handler) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[e]">RCC_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[23]">RS485_RxBufClrHead</a> from rs485.o(i.RS485_RxBufClrHead) referenced from rs485.o(i.RS485_Init)
 <LI><a href="#[22]">RS485_RxPacket</a> from rs485.o(i.RS485_RxPacket) referenced from rs485.o(i.RS485_Init)
 <LI><a href="#[24]">RS485_TxBufComplete</a> from rs485.o(i.RS485_TxBufComplete) referenced from rs485.o(i.RS485_Init)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1d]">SPI1_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from sys_st.o(i.SVC_Handler) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[19]">TIM14_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1a]">TIM16_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1b]">TIM17_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[16]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[17]">TIM1_CC_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[18]">TIM3_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[26]">Task_Apply</a> from main.o(i.Task_Apply) referenced from main.o(i.Task_Apply)
 <LI><a href="#[26]">Task_Apply</a> from main.o(i.Task_Apply) referenced from main.o(i.main)
 <LI><a href="#[27]">Task_ParsingCmd</a> from main.o(i.Task_ParsingCmd) referenced from main.o(i.Task_PollingRS485)
 <LI><a href="#[28]">Task_PollingRS485</a> from main.o(i.Task_PollingRS485) referenced from main.o(i.Task_PollingRS485)
 <LI><a href="#[28]">Task_PollingRS485</a> from main.o(i.Task_PollingRS485) referenced from main.o(i.main)
 <LI><a href="#[1e]">USART1_IRQHandler</a> from uart_st.o(i.USART1_IRQHandler) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[1f]">USART2_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[20]">USB_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f070x6.o(.text) referenced from startup_stm32f070x6.o(RESET)
 <LI><a href="#[29]">__main</a> from __main.o(!!!main) referenced from startup_stm32f070x6.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[29]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[70]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[71]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[72]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[30]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[73]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[74]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[75]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[76]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[77]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[78]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[79]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[80]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[81]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[82]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[83]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[84]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[85]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[86]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[87]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[35]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[88]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[89]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[8a]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[8b]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[8c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[8d]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[8e]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2b]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2d]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2f]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[90]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[31]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; RS485_Init &rArr; DMA1_Ch2_InitForTX &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[91]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3b]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[34]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[92]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[36]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f070x6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_MeasLoop
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_GetMeas
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blink_Loop
</UL>

<P><STRONG><a name="[95]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[33]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[98]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[99]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[9a]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>Adc_GetMeas</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, adc_st.o(i.Adc_GetMeas))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_MeasLoop
</UL>

<P><STRONG><a name="[53]"></a>Adc_Init</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, adc_st.o(i.Adc_Init))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_Init
</UL>

<P><STRONG><a name="[5f]"></a>Adc_Start</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, adc_st.o(i.Adc_Start))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>

<P><STRONG><a name="[5a]"></a>Adc_Stop</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, adc_st.o(i.Adc_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>

<P><STRONG><a name="[51]"></a>Blink</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, blink.o(i.Blink))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_PollingRS485
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_ControlFromMB
</UL>

<P><STRONG><a name="[3c]"></a>Blink_Loop</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, blink.o(i.Blink_Loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Blink_Loop &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3e]"></a>DMA1_Ch2_InitForTX</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, dma_st.o(i.DMA1_Ch2_InitForTX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA1_Ch2_InitForTX &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>

<P><STRONG><a name="[46]"></a>DMA1_Ch2_StartTX</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dma_st.o(i.DMA1_Ch2_StartTX))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_StartTxBuf
</UL>

<P><STRONG><a name="[13]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dma_st.o(i.DMA1_Channel2_3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DataFromMB</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sb_sirenboard.o(i.DataFromMB))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_ControlFromMB
</UL>

<P><STRONG><a name="[6d]"></a>FsmMessages_Init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsmmessage.o(i.FsmMessages_Init))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>Get_Crc16</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, crc16.o(i.Get_Crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_Crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RxPacket
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_PackCrcCalc
</UL>

<P><STRONG><a name="[5c]"></a>GlobSwTimer_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swtimers.o(i.GlobSwTimer_Get))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>

<P><STRONG><a name="[5b]"></a>GlobSwTimer_Start</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, swtimers.o(i.GlobSwTimer_Start))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>

<P><STRONG><a name="[5d]"></a>GlobSwTimer_Stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swtimers.o(i.GlobSwTimer_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>

<P><STRONG><a name="[6b]"></a>Gpio_Init</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, gpio_st.o(i.Gpio_Init))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys_st.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>IdleTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.IdleTask))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler
</UL>
<BR>[Address Reference Count : 4]<UL><LI> scheduler.o(i.Scheduler_TimerService)
<LI> scheduler.o(i.Scheduler)
<LI> scheduler.o(i.Scheduler_Init)
<LI> scheduler.o(i.Scheduler_SetTask)
</UL>
<P><STRONG><a name="[68]"></a>Led_ACT_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gpio_st.o(i.Led_ACT_Set))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_PollingRS485
</UL>

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys_st.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>RS485_Flags</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rs485.o(i.RS485_Flags))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_PollingRS485
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_ParsingCmd
</UL>

<P><STRONG><a name="[40]"></a>RS485_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, rs485.o(i.RS485_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RS485_Init &rArr; DMA1_Ch2_InitForTX &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Ch2_InitForTX
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Handlers
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>RS485_RxBuf</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rs485.o(i.RS485_RxBuf))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_ParsingCmd
</UL>

<P><STRONG><a name="[61]"></a>RS485_TimeOutLoop</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, rs485.o(i.RS485_TimeOutLoop))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[47]"></a>RS485_TxStatusSB</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, rs485.o(i.RS485_TxStatusSB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RS485_TxStatusSB &rArr; SirenBoard_BuildingPackForRS485 &rArr; Siren_GetMeas &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenBoard_BuildingPackForRS485
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_StartTxBuf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_PackCrcCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_ParsingCmd
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys_st.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>SaveDataFromMB</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sb_sirenboard.o(i.SaveDataFromMB))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_ParsingCmd
</UL>

<P><STRONG><a name="[49]"></a>Scheduler</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, scheduler.o(i.Scheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Scheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IdleTask
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>Scheduler_Init</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, scheduler.o(i.Scheduler_Init))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>Scheduler_SetTask</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, scheduler.o(i.Scheduler_SetTask))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_TimerService
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_PollingRS485
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Apply
</UL>

<P><STRONG><a name="[4a]"></a>Scheduler_TimerService</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, scheduler.o(i.Scheduler_TimerService))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Scheduler_TimerService
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_SetTask
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[48]"></a>SirenBoard_BuildingPackForRS485</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, sb_sirenboard.o(i.SirenBoard_BuildingPackForRS485))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SirenBoard_BuildingPackForRS485 &rArr; Siren_GetMeas &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_LineStatus
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_GetMeas
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_TxStatusSB
</UL>

<P><STRONG><a name="[4e]"></a>Siren_ControlFromMB</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, siren.o(i.Siren_ControlFromMB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Siren_ControlFromMB &rArr; Siren_OutputFSM &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFromMB
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blink
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Apply
</UL>

<P><STRONG><a name="[4c]"></a>Siren_GetMeas</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, siren.o(i.Siren_GetMeas))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Siren_GetMeas &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Apply
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenBoard_BuildingPackForRS485
</UL>

<P><STRONG><a name="[52]"></a>Siren_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, siren.o(i.Siren_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Siren_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>Siren_LineStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, siren.o(i.Siren_LineStatus))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenBoard_BuildingPackForRS485
</UL>

<P><STRONG><a name="[54]"></a>Siren_MeasLoop</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, siren.o(i.Siren_MeasLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Siren_MeasLoop
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_GetMeas
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[50]"></a>Siren_OutputFSM</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, siren.o(i.Siren_OutputFSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Siren_OutputFSM &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GlobSwTimer_Stop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GlobSwTimer_Start
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GlobSwTimer_Get
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_On
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_Off
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_GetOnLineStatus
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_GetOffLineStatus
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_LineStatus
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_PollingRS485
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Apply
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_ControlFromMB
</UL>

<P><STRONG><a name="[6c]"></a>SwTimers_Init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, swtimers.o(i.SwTimers_Init))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>SwTimers_Loop</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, swtimers.o(i.SwTimers_Loop))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Handler &rArr; Blink_Loop &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwTimers_Loop
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_TimerService
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_MeasLoop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_TimeOutLoop
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blink_Loop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>SysTick_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sys_tick_st.o(i.SysTick_Init))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>Sys_Init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, sys_st.o(i.Sys_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Sys_Init &rArr; Init_RCC
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_RCC
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>Task_Apply</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main.o(i.Task_Apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Task_Apply &rArr; Siren_ControlFromMB &rArr; Siren_OutputFSM &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_SetTask
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_ControlFromMB
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_GetMeas
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main.o(i.main)
<LI> main.o(i.Task_Apply)
</UL>
<P><STRONG><a name="[27]"></a>Task_ParsingCmd</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.Task_ParsingCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Task_ParsingCmd &rArr; RS485_TxStatusSB &rArr; SirenBoard_BuildingPackForRS485 &rArr; Siren_GetMeas &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDataFromMB
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_TxStatusSB
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RxBuf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Flags
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.Task_PollingRS485)
</UL>
<P><STRONG><a name="[28]"></a>Task_PollingRS485</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, main.o(i.Task_PollingRS485))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Task_PollingRS485 &rArr; Siren_OutputFSM &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_SetTask
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Flags
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Blink
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ACT_Set
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main.o(i.Task_PollingRS485)
<LI> main.o(i.main)
</UL>
<P><STRONG><a name="[1e]"></a>USART1_IRQHandler</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, uart_st.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_ResetErr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070x6.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>Usart1_Handlers</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart_st.o(i.Usart1_Handlers))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>

<P><STRONG><a name="[41]"></a>Usart1_Init</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, uart_st.o(i.Usart1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Usart1_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>

<P><STRONG><a name="[57]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, siren.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>

<P><STRONG><a name="[32]"></a>main</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = main &rArr; RS485_Init &rArr; DMA1_Ch2_InitForTX &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwTimers_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_SetTask
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FsmMessages_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[64]"></a>Init_RCC</STRONG> (Thumb, 262 bytes, Stack size 12 bytes, sys_st.o(i.Init_RCC))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Init_RCC
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[6a]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, uart_st.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
</UL>

<P><STRONG><a name="[69]"></a>Usart_ResetErr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart_st.o(i.Usart_ResetErr))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[3f]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, dma_st.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Ch2_InitForTX
</UL>

<P><STRONG><a name="[43]"></a>RS485_PackCrcCalc</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rs485.o(i.RS485_PackCrcCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RS485_PackCrcCalc &rArr; Get_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_TxStatusSB
</UL>

<P><STRONG><a name="[23]"></a>RS485_RxBufClrHead</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rs485.o(i.RS485_RxBufClrHead))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RxPacket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs485.o(i.RS485_Init)
</UL>
<P><STRONG><a name="[22]"></a>RS485_RxPacket</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, rs485.o(i.RS485_RxPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RS485_RxPacket &rArr; Get_Crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_RxBufClrHead
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Crc16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rs485.o(i.RS485_Init)
</UL>
<P><STRONG><a name="[45]"></a>RS485_StartTxBuf</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, rs485.o(i.RS485_StartTxBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RS485_StartTxBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Ch2_StartTX
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_TxStatusSB
</UL>

<P><STRONG><a name="[24]"></a>RS485_TxBufComplete</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rs485.o(i.RS485_TxBufComplete))
<BR>[Address Reference Count : 1]<UL><LI> rs485.o(i.RS485_Init)
</UL>
<P><STRONG><a name="[59]"></a>Siren_GetOffLineStatus</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, siren.o(i.Siren_GetOffLineStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Siren_GetOffLineStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>

<P><STRONG><a name="[60]"></a>Siren_GetOnLineStatus</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, siren.o(i.Siren_GetOnLineStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Siren_GetOnLineStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>

<P><STRONG><a name="[58]"></a>Siren_Off</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, siren.o(i.Siren_Off))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>

<P><STRONG><a name="[5e]"></a>Siren_On</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, siren.o(i.Siren_On))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Siren_OutputFSM
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3a]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
